(()=>{"use strict";class t{constructor(t="div",e=[]){this.element=document.createElement(t),""!==e.join("")&&this.element.classList.add(...e)}}class e extends t{constructor(t,e,s,n,i){super("button",["button",...i]),this.element.innerText=t,this.element.style.setProperty("--textColor",e),this.element.style.setProperty("--backgroundColor",s),this.element.style.setProperty("--borderColor",n)}}class s{constructor(t,e){this.title=t,this.text=e}}class n extends t{constructor(t,e){super("h1",["title",...e]),this.element.innerText=t}}class i extends t{constructor(t,e){super("p",["paragraph",...e]),this.element.innerText=t}}class a extends t{constructor(t){super("div",["task-content"]),this.taskTitle=new n(t.title,["task-title"]),this.element.append(this.taskTitle.element),this.taskText=new i(t.text,["task-text"]),this.element.append(this.taskText.element)}}class l extends t{constructor(){super("div",["task-buttons"]),this.deleteButton=new e("Delete","#800","#fff","#800",["task-button"]),this.element.append(this.deleteButton.element),this.editButton=new e("Edit","#c80","#fff","#c80",["task-button"]),this.element.append(this.editButton.element),this.disableButton=new e("Disable","#0c0","#fff","#0c0",["task-button"]),this.element.append(this.disableButton.element),this.activateButton=new e("Activate task","#07beb8","#fff","#07beb8",["task-button","task-activate-button"]),this.element.append(this.activateButton.element)}}class d extends t{constructor(){super("div",["edit-task-form-wrapper"]),this.inner=new t("div",["edit-task-form"]),this.titleInput=new t("input",["edit-task-form-input","edit-title-input"]),this.titleInput.element.setAttribute("type","text"),this.titleInput.element.setAttribute("placeholder","New Task's title"),this.inner.element.append(this.titleInput.element),this.textInput=new t("input",["edit-task-form-input","edit-text-input"]),this.textInput.element.setAttribute("type","text"),this.textInput.element.setAttribute("placeholder","New Task's text"),this.inner.element.append(this.textInput.element),this.setButton=new e("Set task","#fff","#0c0","#0c0",["set-button"]),this.inner.element.append(this.setButton.element),this.element.append(this.inner.element)}}class o extends t{constructor(t,e){super("div",["task"]),this.data=t,this.content=new a(t),this.element.append(this.content.element),this.buttons=new l,this.element.append(this.buttons.element),this.id=e,this.editTaskForm=new d,this.element.append(this.editTaskForm.element)}}let p=new class extends t{constructor(){super("div",["add-task-form"]),this.titleInput=new t("input",["add-task-form-input","title-input"]),this.titleInput.element.setAttribute("type","text"),this.titleInput.element.setAttribute("placeholder","New Task's title"),this.element.append(this.titleInput.element),this.textInput=new t("input",["add-task-form-input","text-input"]),this.textInput.element.setAttribute("type","text"),this.textInput.element.setAttribute("placeholder","New Task's text"),this.element.append(this.textInput.element),this.addButton=new e("Add task","#fff","#0c0","#0c0",["add-button"]),this.element.append(this.addButton.element)}};document.body.append(p.element);let m=new class extends t{constructor(){super("div",["tasks-container"]),this.incompletedTasks=[],this.completedTasks=[],this.renderByTasks([],[])}renderByTasks(t,e){this.element.innerHTML="",this.incompletedTasks=t.map((t=>new o(t.data,t.id))),this.completedTasks=e.map((t=>new o(t.data,t.id))),this.incompletedTasks.forEach(((t,e)=>{this.addDeleteTaskListener(t,!1),this.addEditTaskListener(t,e,!1),this.addDisableTaskListener(t),this.element.append(t.element)})),this.completedTasks.forEach((t=>{this.addDeleteTaskListener(t,!0),t.buttons.editButton.element.classList.add("invisible"),t.buttons.disableButton.element.classList.add("invisible"),t.buttons.activateButton.element.classList.add("visible"),this.addActivateTaskListener(t),t.content.element.classList.add("grey"),this.element.append(t.element)})),this.counter=new n(`Incompleted: ${this.incompletedTasks.length}\n      Completed: ${this.completedTasks.length}\n      At all: ${this.incompletedTasks.length+this.completedTasks.length}`,[]),this.element.append(this.counter.element)}addDeleteTaskListener(t,e){t.buttons.deleteButton.element.addEventListener("click",(()=>{e?this.completedTasks=this.completedTasks.filter((e=>e.id!=t.id)):this.incompletedTasks=this.incompletedTasks.filter((e=>e.id!=t.id)),this.renderByTasks(this.incompletedTasks,this.completedTasks)}))}addEditTaskListener(t,e,s){t.buttons.editButton.element.addEventListener("click",(()=>{t.editTaskForm.element.classList.add("open"),t.editTaskForm.titleInput.element.value=t.data.title,t.editTaskForm.textInput.element.value=t.data.text,t.editTaskForm.setButton.element.addEventListener("click",(()=>{this.setTaskListener(t,e,s)}))}))}setTaskListener(t,e,n){let i=new s(t.editTaskForm.titleInput.element.value,t.editTaskForm.textInput.element.value),a=new o(i,(new Date).getTime());n?this.completedTasks.splice(e,1,a):this.incompletedTasks.splice(e,1,a),t.editTaskForm.element.classList.remove("open"),this.renderByTasks(this.incompletedTasks,this.completedTasks)}addDisableTaskListener(t){t.buttons.disableButton.element.addEventListener("click",(()=>{this.incompletedTasks=this.incompletedTasks.filter((e=>e.id!=t.id)),this.completedTasks.push(new o(t.data,t.id)),this.renderByTasks(this.incompletedTasks,this.completedTasks)}))}addActivateTaskListener(t){t.buttons.activateButton.element.addEventListener("click",(()=>{this.completedTasks=this.completedTasks.filter((e=>e.id!=t.id)),this.incompletedTasks.push(new o(t.data,t.id)),this.renderByTasks(this.incompletedTasks,this.completedTasks)}))}};document.body.append(m.element),p.addButton.element.addEventListener("click",(()=>{let t=new s(p.titleInput.element.value,p.textInput.element.value),e=new o(t,(new Date).getTime()),n=!1;m.incompletedTasks.forEach((e=>{Object.entries(t).join()==Object.entries(e.data).join()&&(alert("This task already exists"),n=!0)})),m.completedTasks.forEach((e=>{Object.entries(t).join()==Object.entries(e.data).join()&&(alert("This task already exists"),n=!0)})),n||(m.incompletedTasks.push(e),m.renderByTasks(m.incompletedTasks,m.completedTasks),p.titleInput.element.value="",p.textInput.element.value="")}))})();